#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                  Print stuff
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

post_jump "if snip.tabstop == 2: snip.expand_anon(''.join( ( '$'+str(i+1)+'\{\}' for i in range(len(snip.tabstops[1].current_text.split(','))) ) ))"
snippet pf "print format : print('...'.format(...))"
print("$2".format($1))$0
endsnippet

snippet pd "print debug : print('a: {}, b: {}'.format(a,b))"
print("`!p snip.rv = ', '.join( (param.strip()+': {}' for param in t[1].split(',')) )`".format($1))
endsnippet

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                     Loops
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet f "for ... in ...: ===" b
for ${1:i} in ${2:range($3)}:
	${VISUAL}$0
endsnippet

snippet w "while ...: ===" b
while $1:
	${VISUAL}$0
endsnippet

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                 Miscellaneous
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

snippet ':(.*)/l' ":a,b,c/l --> ['a', 'b', 'c']" r
`!p snip.rv = match.group(1).strip().split(',')`
endsnippet

snippet 'def isPrime' "function to generate primes" b
def isPrime(n):
	if n < 2:
		return False
	elif n == 2:
		return True
	elif n % 2 == 0:
		return False
	else:
		for i in range(3,int(sqrt(n)),2):
			if n % i == 0:
				return False
		return True
endsnippet
